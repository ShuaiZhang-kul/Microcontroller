{\rtf1\ansi\ansicpg936\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14080\viewh15140\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
;***********************************************************\
; File Header\
;***********************************************************\
\
    \
    list p=18F25k50, r=hex, n=0\
    #include <p18F25k50.inc>\
    \
x1 equ 0x25  \
TIMER2	equ 0x00    ;define all variables\
TIMER1	equ 0x01\
TIMER3	equ 0x03\
COUNTER equ 0x02\
 \
\
;***********************************************************\
; Reset Vector\
;***********************************************************\
\
    ORG     0x1000   ; Reset Vector\
    		     ; When debugging:0x000; when loading: 0x800\
    GOTO    START\
    \
;***********************************************************\
; Interrupt Vector\
;***********************************************************\
\
\
\
    ORG     0x1008	; Interrupt Vector  HIGH priority\
    GOTO    inter_high	; When debugging:0x008; when loading: 0x808\
    ORG     0x1018	; Interrupt Vector  HIGH priority\
    GOTO    inter_low	; When debugging:0x008; when loading: 0x808\
    \
;***********************************************************\
; Program Code Starts Here\
;***********************************************************\
\
    ORG     0x1020		; When debugging:0x020; when loading: 0x820\
\
\
START\
   bcf     INTCON, GIE  ; Disable global interrupts\
   bcf     INTCON, PEIE ; Disable Peripheral interrupts\
   bcf     PIE1, SSPIE  ; Disable SSP interrupts\
   bcf     PIR1, SSPIF  ; Clear the SSP interrupt flag\
   clrf    LATB  ; Initialize PORTB by clearing output data latches\
   movlw   0x00  \
   movwf   TRISB   ; Set PORTB as output\
   movlw   0x00  \
   movwf   TRISA   ; Set PORTA as output\
   clrf    LATA\
   \
   bcf TRISC,7     ;set RC7/SDO as output\
   bsf TRISB,0     ;set RB0/SDI as input\
   bcf TRISB,1     ;set RB1/SCK as output\
   bcf SSP1STAT,SMP   ;set SMP=0\
   bcf SSP1STAT,CKE   ;set CKE=0\
   bcf SSP1CON1,WCOL	;no collison\
   bcf SSP1CON1,SSPOV	;no overflow\
   bcf SSP1CON1,CKP   ;set CKP=0\
   bsf SSP1CON1,5   ;set SSPEN=1\
   bcf SSP1CON1,3   ;0\
   bcf SSP1CON1,2   ;0\
   bsf SSP1CON1,1   ;1\
   bsf SSP1CON1,0   ;1   SPI Master mode, clock = TMR2 output/2\
   \
   bcf T2CON,7\
   bcf T2CON,6		;set Postscaler\
   bcf T2CON,5\
   bcf T2CON,4\
   bcf T2CON,3		;1:1 Postscaler\
   bsf T2CON,TMR2ON	;1 = Timer2 is on\
   bsf T2CON,1\
   bcf T2CON,0		 ;1x = Prescaler is 16\
   movlw 0xFF\
   movwf PR2		;set PR2=0xFF\
   \
   bcf PMD1,MSSPMD\
   bcf ANSELB,ANSB0	    ;set RB0 as digital\
   bcf ANSELB,ANSB1	    ;set RB1 as digital\
\
   \
Init_x1\
   movlw 0x00\
   movwf x1\
    \
write			\
    movff x1,SSP1BUF           ;transfer the value in working register to SSP1BUF\
    movlw   0xfe		; change initial value for speed\
    movwf   TIMER3		; move the value to timer3\
    call    delay\
    goto check\
\
check\
    BTFSC PIR1,SSPIF\
    goto counter\
    goto check\
    \
;read\
;    movff   SSP1BUF, LATA\
;    bcf	    PIR1,SSPIF\
;    movlw   0xfe		; change initial value for speed\
;    movwf   TIMER3		; move the value to timer3\
;    call    delay\
;    goto    counter\
    \
counter                 \
    incf    x1,1            ;increase X1 by 1 and store the outcome in X1 register\
    bcf	    PIR1,SSPIF\
    movf x1,0\
    movwf LATA\
    goto write  \
    \
inter_high\
    nop\
    RETFIE\
    \
inter_low\
    nop\
    retfie\
    \
\
    \
delay\
    INCFSZ TIMER1\
    goto delay\
    INCFSZ TIMER2\
    goto delay\
    INCFSZ  TIMER3\
    goto delay\
    \
    return\
    \
    END}